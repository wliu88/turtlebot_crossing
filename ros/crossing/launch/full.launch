<launch>


<!--                        Laserscan 
      This uses lazy subscribing, so will not activate until scan is requested.
    -->
    <group>
      <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan_loader" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet camera_nodelet_manager">
		    <!-- Pixel rows to use to generate the laserscan. For each column, the scan will
		         return the minimum value for those pixels centered vertically in the image. -->
		    <param name="scan_height" value="10"/>
        <param name="output_frame_id" value="/camera_depth_frame"/>
        <param name="range_min" value="0.45"/>
        <remap from="image" to="/camera/depth/image_raw"/>
        <remap from="scan" to="/scan"/>
      </node>
    </group>


      <node pkg="crossing" type="stop" name="stop" output="screen">
        <param name="Odometry_Tolerance" value=".1" type="double"/>
        <param name="Critical_Distance" value=".5" type="double"/>
        <param name="Scan_Point" value="10"/>
      </node>

     <node pkg="safe_turtle" type="safe_turtlebot" name="safe_turtlebot" />
</launch>

